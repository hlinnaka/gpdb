CREATE EXTENSION IF NOT EXISTS gp_inject_fault;
CREATE TABLE biginserttest (id int4);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
-- Pretend that the insert below inserted more than 4 billion rows.
--
-- Use type 'skip', because we don't want to throw an ERROR or worse. There
-- is special handling at the code that checks for this fault, to bump up
-- the row counter regardless of the fault type.
select gp_inject_fault('executor_run_high_processed', 'reset', 2);
NOTICE:  Success:
 gp_inject_fault 
-----------------
 t
(1 row)

select gp_inject_fault('executor_run_high_processed', 'skip', 2);
NOTICE:  Success:
 gp_inject_fault 
-----------------
 t
(1 row)

do $$
declare
  num_rows int8;
begin

  insert into biginserttest select g from generate_series(1, 100) g;
  GET DIAGNOSTICS num_rows = ROW_COUNT;

  raise notice 'inserted % rows', num_rows;
end;
$$;
NOTICE:  inserted 4294967354 rows
select gp_inject_fault('executor_run_high_processed', 'reset', 2);
NOTICE:  Success:
 gp_inject_fault 
-----------------
 t
(1 row)

