# Greenplum-specific tests
#
# The order of the tests is fairly random, but there are a couple of things
# to consider when placing a new test:
#
# * Keep long-running tests in the same group with other tests with a similar
#   runtime. That way, on a multi-processor system, the tests will finish
#   roughly at the same time, which maximizes parallelism.
# * Keep tests together with other tests for similar functionality.
# * There are some dependencies between tests, and some tests cannot run
#   in parallel with other tests.
# * The maximum size of a group is about 20, like in the Postgres
#   parallel_schedule. However, some queries can dispatch a lot of workers
#   to the segments, and therefore has to run in smaller groups to avoid
#   hitting max_connections limit on segments.
#

ignore: leastsquares
test: decode_expr bitmapscan case_gp limit_gp notin percentile naivebayes join_gp union_gp gpcopy
test: filter gpctas gpdist matrix toast sublink sirv_functions table_functions olap_setup

test: dispatch

test: gpdiffcheck gptokencheck information_schema gp_hashagg sequence_gp tidscan

test: rangefuncs_cdb gp_dqa external_table subselect_gp indexjoin distributed_transactions olap_group olap_window_seq with_clause as_alias regex_gp partition1

# 'partition' runs for a long time, so try to keep it together with other
# long-running tests. Unfortunately, 'partition' also assumes that there
# are no other partitioned tables present in the database, so it cannot run
# in parallel with tests that use partitions.
test: partition appendonly alter_distpol_dropped
# 'partition_locking' gets confused if other backends run concurrently and
# hold locks.
test: partition_locking
test: vacuum_gp

# FIXME: Temporarily disabled, because it trips an assertion. It's probably
# harmless, but need to investigate and fix. Also, the number of errors put
# in the error table, and hence the output, varies between runs.
#test: sreh

# Disabled tests. XXX: Why are these disabled?
#test: olap_window
#test: tpch500GB
#ignore: dpe

# FIXME: These tests no longer work, because they try to set
# gp_interconnect_type, which doesn't work:
# ERROR:  parameter "gp_interconnect_type" cannot be set after connection start
#test: gpic
#test: gpic_bigtup

ignore: gp_portal_error
test: partition_indexing column_compression eagerfree mapred gpparams tidycat aocs gp_optimizer co_nestloop_idxscan  gpdtm_plpgsql alter_table_aocs alter_distribution_policy ic
ignore: icudp_full
ignore: gp_delete_as_trunc

test: resource_queue

test: filespace trig auth_constraint role rle portals_updatable plpgsql_cache timeseries resource_queue_function pg_stat_last_operation gp_numeric_agg gp_toolkit plan_size partindex_test direct_dispatch partition_pruning_with_fn dsp

#Aggregate function
test: aggregate_with_groupingsets

ignore: tpch500GB_orca

# XXX: This test depends on libgpoptudfs library, which includes ORCA helper
# functions from src/backend/gpopt/utils/funcs.cpp. But those functions are
# built into the backend (or rather, into libdxltranslators.so) directly,
# so what's the point of that? Anyhow, the test is disabled for now..
#test: orca_udfs

# end of tests
